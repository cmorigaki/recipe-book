class TestExistenceValidation extends DefaultTask {

    static final SRC_DIR = 'src'
    static final JAVA_DIR = 'java'
    static final TEST_DIRS = ['test']

    static final IGNORED_NAME_PATTERNS = [
        ~/^sample-.++$/
    ]

    @TaskAction
    void execute() {
        if (shouldSkip(project)) return

        File srcDir = new File(project.projectDir, SRC_DIR)
        FileFilter filter = { it.isDirectory() }
        File[] subDirs = srcDir.listFiles(filter) ?: []
        File testsDir = subDirs.find { TEST_DIRS.contains(it.name) }
        if (testsDir) {
            File javaTestsDir = testsDir
                .listFiles(filter)
                .find { it.name == JAVA_DIR }
            if (javaTestsDir && javaTestsDir.list().length > 0) {
                return
            }
        }

        throw new GradleException(
            "${project.name} has no unit tests. "
        )
    }

    private static boolean shouldSkip(Project project) {
        def name = project.name
        return IGNORED_NAME_PATTERNS
            .collect { name =~ it } // convert Pattern to Matcher
            .any { it.find() }
    }
}

